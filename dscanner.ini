; Configure which static analysis checks are enabled
[analysis.config.StaticAnalysisConfig]
; Check variable, class, struct, interface, union, and function names against the Phobos style guide
style_check="enabled"
; Check for array literals that cause unnecessary allocation
enum_array_literal_check="enabled"
; Check for poor exception handling practices
exception_check="enabled"
; Check for use of the deprecated 'delete' keyword
delete_check="enabled"
; Check for use of the deprecated floating point operators
float_operator_check="enabled"
; Check number literals for readability
number_style_check="enabled"
; Checks that opEquals, opCmp, toHash, and toString are either const, immutable, or inout.
object_const_check="disabled"
; Checks for .. expressions where the left side is larger than the right.
backwards_range_check="enabled"
; Checks for if statements whose 'then' block is the same as the 'else' block
if_else_same_check="enabled"
; Checks for some problems with constructors
constructor_check="enabled"
; Checks for unused variables
unused_variable_check="enabled"
; Checks for unused labels
unused_label_check="enabled"
; Checks for unused function parameters
unused_parameter_check="enabled"
; Checks for duplicate attributes
duplicate_attribute="enabled"
; Checks that opEquals and toHash are both defined or neither are defined
opequals_tohash_check="enabled"
; Checks for subtraction from .length properties
length_subtraction_check="disabled"
; Checks for methods or properties whose names conflict with built-in properties
builtin_property_names_check="enabled"
; Checks for confusing code in inline asm statements
asm_style_check="enabled"
; Checks for confusing logical operator precedence
logical_precedence_check="disabled"
; Checks for undocumented public declarations
undocumented_declaration_check="disabled"
; Checks for poor placement of function attributes
function_attribute_check="enabled"
; Checks for use of the comma operator
comma_expression_check="enabled"
; Checks for local imports that are too broad. Only accurate when checking code used with D versions older than 2.071.0
local_import_check="disabled"
; Checks for variables that could be declared immutable
could_be_immutable_check="disabled"
; Checks for redundant expressions in if statements
redundant_if_check="enabled"
; Checks for redundant parenthesis
redundant_parens_check="enabled"
; Checks for mismatched argument and parameter names
mismatched_args_check="disabled"
; Checks for labels with the same name as variables
label_var_same_name_check="enabled"
; Checks for lines longer than `max_line_length` characters
long_line_check="disabled"
; Checks for assignment to auto-ref function parameters
auto_ref_assignment_check="enabled"
; Checks for incorrect infinite range definitions
incorrect_infinite_range_check="enabled"
; Checks for asserts that are always true
useless_assert_check="enabled"
; Check for uses of the old-style alias syntax
alias_syntax_check="enabled"
; Checks for else if that should be else static if
static_if_else_check="enabled"
; Check for unclear lambda syntax
lambda_return_check="enabled"
; Check for auto function without return statement
auto_function_check="enabled"
; Check for sortedness of imports
imports_sortedness="disabled"
; Check for explicitly annotated unittests
explicitly_annotated_unittests="disabled"
; Check for properly documented public functions (Returns, Params)
properly_documented_public_functions="disabled"
; Check for useless usage of the final attribute
final_attribute_check="enabled"
; Check for virtual calls in the class constructors
vcall_in_ctor="enabled"
; Check for useless user defined initializers
useless_initializer="disabled"
; Check allman brace style
allman_braces_check="disabled"
; Check for redundant attributes
redundant_attributes_check="enabled"
; Check public declarations without a documented unittest
has_public_example="disabled"
; Check for asserts without an explanatory message
assert_without_msg="disabled"
; Check indent of if constraints
if_constraints_indent="disabled"
; Check for @trusted applied to a bigger scope than a single function
trust_too_much="enabled"
; Check for redundant storage classes on variable declarations
redundant_storage_classes="enabled"
; Check for unused function return values
unused_result="enabled"
; Enable cyclomatic complexity check
cyclomatic_complexity="disabled"

[analysis.config.ModuleFilters]
style_check="-arsd.,-datefmt"
enum_array_literal_check="-arsd.,-datefmt"
exception_check="-arsd.,-datefmt"
delete_check="-arsd.,-datefmt"
float_operator_check="-arsd.,-datefmt"
number_style_check="-arsd.,-datefmt"
object_const_check="-arsd.,-datefmt"
backwards_range_check="-arsd.,-datefmt"
if_else_same_check="-arsd.,-datefmt"
constructor_check="-arsd.,-datefmt"
unused_variable_check="-arsd.,-datefmt"
unused_label_check="-arsd.,-datefmt"
unused_parameter_check="-arsd.,-datefmt"
duplicate_attribute="-arsd.,-datefmt"
opequals_tohash_check="-arsd.,-datefmt"
length_subtraction_check="-arsd.,-datefmt"
builtin_property_names_check="-arsd.,-datefmt"
asm_style_check="-arsd.,-datefmt"
logical_precedence_check="-arsd.,-datefmt"
undocumented_declaration_check="-arsd.,-datefmt"
function_attribute_check="-arsd.,-datefmt"
comma_expression_check="-arsd.,-datefmt"
local_import_check="-arsd.,-datefmt"
could_be_immutable_check="-arsd.,-datefmt"
redundant_if_check="-arsd.,-datefmt"
redundant_parens_check="-arsd.,-datefmt"
mismatched_args_check="-arsd.,-datefmt"
label_var_same_name_check="-arsd.,-datefmt"
long_line_check="-arsd.,-datefmt"
auto_ref_assignment_check="-arsd.,-datefmt"
incorrect_infinite_range_check="-arsd.,-datefmt"
useless_assert_check="-arsd.,-datefmt"
alias_syntax_check="-arsd.,-datefmt"
static_if_else_check="-arsd.,-datefmt"
lambda_return_check="-arsd.,-datefmt"
auto_function_check="-arsd.,-datefmt"
imports_sortedness="-arsd.,-datefmt"
explicitly_annotated_unittests="-arsd.,-datefmt"
properly_documented_public_functions="-arsd.,-datefmt"
final_attribute_check="-arsd.,-datefmt"
vcall_in_ctor="-arsd.,-datefmt"
useless_initializer="-arsd.,-datefmt"
allman_braces_check="-arsd.,-datefmt"
redundant_attributes_check="-arsd.,-datefmt"
has_public_example="-arsd.,-datefmt"
assert_without_msg="-arsd.,-datefmt"
if_constraints_indent="-arsd.,-datefmt"
trust_too_much="-arsd.,-datefmt"
redundant_storage_classes="-arsd.,-datefmt"
unused_result="-arsd.,-datefmt"
